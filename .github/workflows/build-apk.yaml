name: Build Android APK
run-name: ${{ github.event.inputs.repository }}:${{ github.event.inputs.taskName }}

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Git repository URL"
        required: true
        default: ""
      jdkVersion:
        description: "OpenJDK version to use: 8 / 11 / 17 etc."
        required: false
        default: "17"
      taskName:
        description: "build.gradle task name: assemble[Flavor]Debug"
        required: false
        default: "assembleDebug"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ github.event.inputs.jdkVersion }}
          
      - name: Accept Android SDK licenses
        run: |
          mkdir -p $ANDROID_SDK_ROOT/licenses
          echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee\n" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd\n" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license

      - name: Clone project
        run: git clone --depth=1 ${{ github.event.inputs.repository }} workspace

      - name: Build APK
        working-directory: ./workspace
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew
          ./gradlew ${{ github.event.inputs.taskName }} --stacktrace

      - name: Prepare artifact folder
        run: |
          REPO_URL="${{ github.event.inputs.repository }}"
          REPO_URL="${REPO_URL%.git}"
          REPO_NAME=$(basename "$REPO_URL")
          AUTHOR_NAME=$(echo "$REPO_URL" | rev | cut -d/ -f2 | rev)
          FOLDER_NAME="${REPO_NAME}(${AUTHOR_NAME})"
          INNER_FOLDER="$FOLDER_NAME/$FOLDER_NAME"
          mkdir -p "$INNER_FOLDER"
          echo "$REPO_URL" > "$INNER_FOLDER/github.txt"
          echo "FOLDER_NAME=$FOLDER_NAME" >> $GITHUB_ENV
          echo "INNER_FOLDER=$INNER_FOLDER" >> $GITHUB_ENV

      - name: Move APK files
        run: |
          find ./workspace -name '*.apk' | while read apk_file; do
            mv "$apk_file" "$INNER_FOLDER/"
          done

      - name: Upload the APK artifact with 1 day retention
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.FOLDER_NAME }}
          name: ${{ env.FOLDER_NAME }}
          retention-days: 1
          if-no-files-found: error
